{"version":3,"file":"static/js/947.32daeb0d.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.jsx","services/themoviedb.js"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieFromId } from 'services/themoviedb';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\n\nconst MovieDetails = () => {\n  const [movieDetails, setmovieDetails] = useState({});\n  const [error, setError] = useState('');\n  const [finishFetch, setFinishFetch] = useState(false);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    setFinishFetch(false);\n    getMovieFromId(movieId)\n      .then(\n        ({\n          poster_path,\n          title,\n          release_date,\n          vote_average,\n          overview,\n          genres,\n        }) => {\n          const movie = {\n            poster: poster_path,\n            title,\n            date: release_date.slice(0, 4),\n            score: Math.round(vote_average * 100) / 10,\n            overview,\n            genres: `${genres.map(item => item.name).join(', ')}`,\n          };\n          setmovieDetails(movie);\n          setFinishFetch(true);\n        }\n      )\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  const { title, poster, date, score, overview, genres } = movieDetails;\n  const posterLink = `https://image.tmdb.org/t/p/w300_and_h450_bestv2/${poster}`;\n  return (\n    <>\n      {!error && finishFetch ? (\n        <>\n          <Link to={backLinkLocationRef.current} className=\"link-back\">\n            {' '}\n            <FaLongArrowAltLeft /> Go Back\n          </Link>\n          <div className=\"info\">\n            <img src={posterLink} alt={title} />\n            <div>\n              <h1>\n                {title} ({date})\n              </h1>\n              <p>User score: {score}%</p>\n              <dl>\n                <dt>Overview</dt>\n                <dd>{overview}</dd>\n              </dl>\n              <dl>\n                <dt>Genres</dt>\n                <dd>{genres}</dd>\n              </dl>\n            </div>\n          </div>\n          <div className=\"additional\">\n            <h2>Additional information</h2>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Review</Link>\n              </li>\n            </ul>\n          </div>\n\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        <p>{error}</p>\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n","const URL = 'https://api.themoviedb.org/3/';\nconst language = '?language=en-US';\nconst errorText = 'Щось пішло не так :-( спробуйте ще раз!';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OTg2YTIxZDVmYWQ2YjQ4NDQyMjgwNTVhMzRhNzFhNCIsInN1YiI6IjY1Yzc1YjdjOThmMWYxMDE2MmQ2OWEwNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.L_8rlg8ILsxFKeMljqJDpIOjbcsP-UICwiRRB2lFeHY',\n  },\n};\n\nexport const getTrendingMovies = () => {\n  return fetch(`${URL}trending/movie/day${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getMovieFromId = id => {\n  return fetch(`${URL}movie/${id}${language}`, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(errorText);\n    }\n  });\n};\nexport const getCastMovieFromId = id => {\n  return fetch(`${URL}movie/${id}/credits${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getReviewsMovieFromId = id => {\n  return fetch(`${URL}movie/${id}/reviews${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getMovieFromQuery = query => {\n  return fetch(\n    `${URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(errorText);\n    }\n  });\n};\n"],"names":["_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieDetails","setmovieDetails","_useState3","_useState4","error","setError","_useState5","_useState6","finishFetch","setFinishFetch","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMovieFromId","then","_ref","poster_path","title","release_date","vote_average","overview","genres","movie","poster","date","slice","score","Math","round","concat","map","item","name","join","catch","message","posterLink","_jsx","_Fragment","children","_jsxs","Link","to","current","className","FaLongArrowAltLeft","src","alt","Suspense","fallback","Outlet","URL","language","errorText","options","method","headers","accept","Authorization","getTrendingMovies","fetch","response","ok","json","Error","id","getCastMovieFromId","getReviewsMovieFromId","getMovieFromQuery","query"],"sourceRoot":""}