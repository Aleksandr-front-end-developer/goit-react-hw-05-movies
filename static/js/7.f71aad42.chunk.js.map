{"version":3,"file":"static/js/7.f71aad42.chunk.js","mappings":"kMAiDA,UA7Ce,WACb,IAAAA,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRN,GACEE,IACAK,EAAAA,EAAAA,IAAkBL,GACfM,MAAK,SAAAC,GAAkB,IAAfC,EAAOD,EAAPC,QACPd,EAAUc,EACZ,IACCC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACpB,GACN,GAAG,CAACb,EAAOF,IAOX,OACEgB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMG,OAAO,GAAGC,SAPC,SAAAC,GACnBA,EAAEC,iBACFrB,EAAgB,CAAEC,MAAOmB,EAAEE,OAAOL,SAAShB,MAAMsB,OACnD,EAI2CN,SAAA,EACrCO,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,KAAK,WACxBF,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQR,SAAC,eAGxBO,EAAAA,EAAAA,KAAA,MAAAP,SACGvB,EAAOiC,KAAI,SAAAC,GAAoB,IAAjBC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MACXC,EAAM,WAAAC,OAAcH,GAC1B,OACEL,EAAAA,EAAAA,KAAA,MAAAP,UACEO,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAIH,EAAQI,MAAO,CAAEC,KAAMjC,GAAWc,SACzCa,KAFID,EAMb,QAIR,C,uJChDA,IAAMQ,EAAM,gCACNC,EAAW,kBACXC,EAAY,sLAEZC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAoB,WAC/B,OAAOC,MAAM,GAADd,OAAIK,EAAG,sBAAAL,OAAqBM,GAAYE,GAASjC,MAC3D,SAAAwC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMX,EAEpB,GAEJ,EACaY,EAAiB,SAAAtB,GAC5B,OAAOiB,MAAM,GAADd,OAAIK,EAAG,UAAAL,OAASH,GAAEG,OAAGM,GAAYE,GAASjC,MAAK,SAAAwC,GACzD,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMX,EAEpB,GACF,EACaa,EAAqB,SAAAvB,GAChC,OAAOiB,MAAM,GAADd,OAAIK,EAAG,UAAAL,OAASH,EAAE,YAAAG,OAAWM,GAAYE,GAASjC,MAC5D,SAAAwC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMX,EAEpB,GAEJ,EACac,EAAwB,SAAAxB,GACnC,OAAOiB,MAAM,GAADd,OAAIK,EAAG,UAAAL,OAASH,EAAE,YAAAG,OAAWM,GAAYE,GAASjC,MAC5D,SAAAwC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMX,EAEpB,GAEJ,EACajC,EAAoB,SAAAL,GAC/B,OAAO6C,MAAM,GAADd,OACPK,EAAG,uBAAAL,OAAsB/B,EAAK,8CACjCuC,GACAjC,MAAK,SAAAwC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMX,EAEpB,GACF,C","sources":["components/pages/Movies.jsx","services/themoviedb.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getMovieFromQuery } from 'services/themoviedb';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    searchParams &&\n      query &&\n      getMovieFromQuery(query)\n        .then(({ results }) => {\n          setMovies(results);\n        })\n        .catch(error => {\n          console.log(error.message);\n        });\n  }, [query, searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.children.query.value });\n  };\n\n  return (\n    <>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <ul>\n        {movies.map(({ id, title }) => {\n          const idLink = `/movies/${id}`;\n          return (\n            <li key={id}>\n              <Link to={idLink} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Movies;\n","const URL = 'https://api.themoviedb.org/3/';\nconst language = '?language=en-US';\nconst errorText = 'Щось пішло не так :-( спробуйте ще раз!';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OTg2YTIxZDVmYWQ2YjQ4NDQyMjgwNTVhMzRhNzFhNCIsInN1YiI6IjY1Yzc1YjdjOThmMWYxMDE2MmQ2OWEwNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.L_8rlg8ILsxFKeMljqJDpIOjbcsP-UICwiRRB2lFeHY',\n  },\n};\n\nexport const getTrendingMovies = () => {\n  return fetch(`${URL}trending/movie/day${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getMovieFromId = id => {\n  return fetch(`${URL}movie/${id}${language}`, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(errorText);\n    }\n  });\n};\nexport const getCastMovieFromId = id => {\n  return fetch(`${URL}movie/${id}/credits${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getReviewsMovieFromId = id => {\n  return fetch(`${URL}movie/${id}/reviews${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getMovieFromQuery = query => {\n  return fetch(\n    `${URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(errorText);\n    }\n  });\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","location","useLocation","useEffect","getMovieFromQuery","then","_ref","results","catch","error","console","log","message","_jsxs","_Fragment","children","action","onSubmit","e","preventDefault","target","value","_jsx","type","name","map","_ref2","id","title","idLink","concat","Link","to","state","from","URL","language","errorText","options","method","headers","accept","Authorization","getTrendingMovies","fetch","response","ok","json","Error","getMovieFromId","getCastMovieFromId","getReviewsMovieFromId"],"sourceRoot":""}