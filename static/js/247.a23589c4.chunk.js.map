{"version":3,"file":"static/js/247.a23589c4.chunk.js","mappings":"uMAmCA,UA9Ba,WACX,IAAAA,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE5BI,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBH,GAChBI,MAAK,SAAAC,GAAe,IAAZC,EAAID,EAAJC,KACPP,EAAgBO,EAClB,IACCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAQ,GAC9C,GAAG,CAACX,KAGFY,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SACGhB,EAAaiB,KAAI,SAAAC,GAAiD,IAA9CC,EAAYD,EAAZC,aAAcC,EAAaF,EAAbE,cAAeC,EAASH,EAATG,UAC1CC,EAAM,yDAAAC,OAA4DJ,GACxE,OACEK,EAAAA,EAAAA,MAAA,MAAAR,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKW,IAAKH,EAAQI,IAAI,MACtBZ,EAAAA,EAAAA,KAAA,KAAAE,SAAII,KACJI,EAAAA,EAAAA,MAAA,KAAAR,SAAA,CAAG,cAAYK,QAHRM,EAAAA,EAAAA,MAMb,OAIR,C,uJClCA,IAAMC,EAAM,gCACNC,EAAW,kBACXC,EAAY,sLAEZC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAoB,WAC/B,OAAOC,MAAM,GAADd,OAAIK,EAAG,sBAAAL,OAAqBM,GAAYE,GAASzB,MAC3D,SAAAgC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMX,EAEpB,GAEJ,EACaY,EAAiB,SAAAC,GAC5B,OAAON,MAAM,GAADd,OAAIK,EAAG,UAAAL,OAASoB,GAAEpB,OAAGM,GAAYE,GAASzB,MAAK,SAAAgC,GACzD,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMX,EAEpB,GACF,EACazB,EAAqB,SAAAsC,GAChC,OAAON,MAAM,GAADd,OAAIK,EAAG,UAAAL,OAASoB,EAAE,YAAApB,OAAWM,GAAYE,GAASzB,MAC5D,SAAAgC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMX,EAEpB,GAEJ,EACac,EAAwB,SAAAD,GACnC,OAAON,MAAM,GAADd,OAAIK,EAAG,UAAAL,OAASoB,EAAE,YAAApB,OAAWM,GAAYE,GAASzB,MAC5D,SAAAgC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMX,EAEpB,GAEJ,EACae,EAAoB,SAAAC,GAC/B,OAAOT,MAAM,GAADd,OACPK,EAAG,uBAAAL,OAAsBuB,EAAK,8CACjCf,GACAzB,MAAK,SAAAgC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMX,EAEpB,GACF,C,uDClEO,IAAMiB,EACX,mECmBSpB,EAAS,WAGlB,IAHiC,IAAdqB,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACtBN,EAAK,GACLS,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWP,IAC3CA,KACLL,GAAMI,EAA0B,GAAdK,EAAMJ,IAE1B,OAAOL,CACT,C","sources":["components/Cast/Cast.jsx","services/themoviedb.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { getCastMovieFromId } from 'services/themoviedb';\nimport { nanoid } from 'nanoid';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [movieDetails, setmovieDetails] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCastMovieFromId(movieId)\n      .then(({ cast }) => {\n        setmovieDetails(cast);\n      })\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {movieDetails.map(({ profile_path, original_name, character }) => {\n          const poster = `https://media.themoviedb.org/t/p/w300_and_h450_bestv2/${profile_path}`;\n          return (\n            <li key={nanoid()}>\n              <img src={poster} alt=\"\" />\n              <p>{original_name}</p>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Cast;\n","const URL = 'https://api.themoviedb.org/3/';\nconst language = '?language=en-US';\nconst errorText = 'Щось пішло не так :-( спробуйте ще раз!';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OTg2YTIxZDVmYWQ2YjQ4NDQyMjgwNTVhMzRhNzFhNCIsInN1YiI6IjY1Yzc1YjdjOThmMWYxMDE2MmQ2OWEwNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.L_8rlg8ILsxFKeMljqJDpIOjbcsP-UICwiRRB2lFeHY',\n  },\n};\n\nexport const getTrendingMovies = () => {\n  return fetch(`${URL}trending/movie/day${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getMovieFromId = id => {\n  return fetch(`${URL}movie/${id}${language}`, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(errorText);\n    }\n  });\n};\nexport const getCastMovieFromId = id => {\n  return fetch(`${URL}movie/${id}/credits${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getReviewsMovieFromId = id => {\n  return fetch(`${URL}movie/${id}/reviews${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getMovieFromQuery = query => {\n  return fetch(\n    `${URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(errorText);\n    }\n  });\n};\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"],"names":["_useState","useState","_useState2","_slicedToArray","movieDetails","setmovieDetails","movieId","useParams","useEffect","getCastMovieFromId","then","_ref","cast","catch","error","console","log","message","_jsx","_Fragment","children","map","_ref2","profile_path","original_name","character","poster","concat","_jsxs","src","alt","nanoid","URL","language","errorText","options","method","headers","accept","Authorization","getTrendingMovies","fetch","response","ok","json","Error","getMovieFromId","id","getReviewsMovieFromId","getMovieFromQuery","query","urlAlphabet","size","arguments","length","undefined","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}