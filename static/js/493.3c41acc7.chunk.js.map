{"version":3,"file":"static/js/493.3c41acc7.chunk.js","mappings":"sMAwCA,UApCa,WACX,IAAAA,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAClBI,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJ,IAAMP,EAASO,EAAKC,QAAQC,KAAI,SAAAC,GAAY,MAAQ,CAClDC,GADmCD,EAAFC,GAEjCC,MAF0CF,EAALE,MAGtC,IACDX,EAAUD,EACZ,IACCa,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACpB,GACJ,GAAG,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,MAAAD,SACGpB,EAAOS,KAAI,SAAAa,EAAgBC,GAAW,IAAxBZ,EAAEW,EAAFX,GAAIC,EAAKU,EAALV,MACXY,EAAM,WAAAC,OAAcd,GAC1B,OACEU,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAIH,EAAQI,MAAO,CAAEC,KAAM3B,GAAWkB,SACzCR,KAFID,EAMb,QAIR,C,uJCvCA,IAAMmB,EAAM,gCACNC,EAAW,kBACXC,EAAY,sLAEZC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOhC,EAAoB,WAC/B,OAAOiC,MAAM,GAADb,OAAIK,EAAG,sBAAAL,OAAqBM,GAAYE,GAAS3B,MAC3D,SAAAiC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMV,EAEpB,GAEJ,EACaW,EAAiB,SAAAhC,GAC5B,OAAO2B,MAAM,GAADb,OAAIK,EAAG,UAAAL,OAASd,GAAEc,OAAGM,GAAYE,GAAS3B,MAAK,SAAAiC,GACzD,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMV,EAEpB,GACF,EACaY,EAAqB,SAAAjC,GAChC,OAAO2B,MAAM,GAADb,OAAIK,EAAG,UAAAL,OAASd,EAAE,YAAAc,OAAWM,GAAYE,GAAS3B,MAC5D,SAAAiC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMV,EAEpB,GAEJ,EACaa,EAAwB,SAAAlC,GACnC,OAAO2B,MAAM,GAADb,OAAIK,EAAG,UAAAL,OAASd,EAAE,YAAAc,OAAWM,GAAYE,GAAS3B,MAC5D,SAAAiC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMV,EAEpB,GAEJ,EACac,EAAoB,SAAAC,GAC/B,OAAOT,MAAM,GAADb,OACPK,EAAG,uBAAAL,OAAsBsB,EAAK,8CACjCd,GACA3B,MAAK,SAAAiC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMV,EAEpB,GACF,C","sources":["components/pages/Home.jsx","services/themoviedb.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/themoviedb';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(data => {\n        const movies = data.results.map(({ id, title }) => ({\n          id,\n          title,\n        }));\n        setMovies(movies);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <ul>\n        {movies.map(({ id, title }, index) => {\n          const idLink = `/movies/${id}`;\n          return (\n            <li key={id}>\n              <Link to={idLink} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Home;\n","const URL = 'https://api.themoviedb.org/3/';\nconst language = '?language=en-US';\nconst errorText = 'Щось пішло не так :-( спробуйте ще раз!';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OTg2YTIxZDVmYWQ2YjQ4NDQyMjgwNTVhMzRhNzFhNCIsInN1YiI6IjY1Yzc1YjdjOThmMWYxMDE2MmQ2OWEwNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.L_8rlg8ILsxFKeMljqJDpIOjbcsP-UICwiRRB2lFeHY',\n  },\n};\n\nexport const getTrendingMovies = () => {\n  return fetch(`${URL}trending/movie/day${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getMovieFromId = id => {\n  return fetch(`${URL}movie/${id}${language}`, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(errorText);\n    }\n  });\n};\nexport const getCastMovieFromId = id => {\n  return fetch(`${URL}movie/${id}/credits${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getReviewsMovieFromId = id => {\n  return fetch(`${URL}movie/${id}/reviews${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getMovieFromQuery = query => {\n  return fetch(\n    `${URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(errorText);\n    }\n  });\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","location","useLocation","useEffect","getTrendingMovies","then","data","results","map","_ref","id","title","catch","error","console","log","message","_jsxs","_Fragment","children","_jsx","_ref2","index","idLink","concat","Link","to","state","from","URL","language","errorText","options","method","headers","accept","Authorization","fetch","response","ok","json","Error","getMovieFromId","getCastMovieFromId","getReviewsMovieFromId","getMovieFromQuery","query"],"sourceRoot":""}