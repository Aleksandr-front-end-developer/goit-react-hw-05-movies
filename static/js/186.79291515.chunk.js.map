{"version":3,"file":"static/js/186.79291515.chunk.js","mappings":"uMAsCA,UAjCgB,WACd,IAAAA,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAsCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE1BG,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACRH,GAAe,IACfI,EAAAA,EAAAA,IAAsBH,GACnBI,MAAK,SAAAC,GAAkB,IAAfC,EAAOD,EAAPC,QACPX,EAAgBW,GAChBP,GAAe,EACjB,IACCQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAQ,GAC9C,GAAG,CAACX,KAEFY,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SACGpB,EAAaqB,OACVrB,EAAasB,KAAI,SAAAC,GAA0B,IAAvBC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAC1B,OACEC,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKI,KACLN,EAAAA,EAAAA,KAAA,KAAAE,SAAIK,OAFGE,EAAAA,EAAAA,MAKb,IACAvB,IAAec,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gDAK9B,C,uJCrCA,IAAMQ,EAAM,gCACNC,EAAW,kBACXC,EAAY,sLAEZC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAoB,WAC/B,OAAOC,MAAM,GAADC,OAAIV,EAAG,sBAAAU,OAAqBT,GAAYE,GAASrB,MAC3D,SAAA6B,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMZ,EAEpB,GAEJ,EACaa,EAAiB,SAAAC,GAC5B,OAAOP,MAAM,GAADC,OAAIV,EAAG,UAAAU,OAASM,GAAEN,OAAGT,GAAYE,GAASrB,MAAK,SAAA6B,GACzD,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMZ,EAEpB,GACF,EACae,EAAqB,SAAAD,GAChC,OAAOP,MAAM,GAADC,OAAIV,EAAG,UAAAU,OAASM,EAAE,YAAAN,OAAWT,GAAYE,GAASrB,MAC5D,SAAA6B,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMZ,EAEpB,GAEJ,EACarB,EAAwB,SAAAmC,GACnC,OAAOP,MAAM,GAADC,OAAIV,EAAG,UAAAU,OAASM,EAAE,YAAAN,OAAWT,GAAYE,GAASrB,MAC5D,SAAA6B,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMZ,EAEpB,GAEJ,EACagB,EAAoB,SAAAC,GAC/B,OAAOV,MAAM,GAADC,OACPV,EAAG,uBAAAU,OAAsBS,EAAK,8CACjChB,GACArB,MAAK,SAAA6B,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMZ,EAEpB,GACF,C,uDClEO,IAAMkB,EACX,mECmBSrB,EAAS,WAGlB,IAHiC,IAAdsB,EAAIC,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACtBN,EAAK,GACLQ,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWN,IAC3CA,KACLL,GAAMI,EAA0B,GAAdI,EAAMH,IAE1B,OAAOL,CACT,C","sources":["components/Reviews/Reviews.jsx","services/themoviedb.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { nanoid } from 'nanoid';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsMovieFromId } from 'services/themoviedb';\n\nconst Reviews = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [finishFetch, setFinishFetch] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setFinishFetch(false);\n    getReviewsMovieFromId(movieId)\n      .then(({ results }) => {\n        setMovieDetails(results);\n        setFinishFetch(true);\n      })\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n  return (\n    <>\n      <ul>\n        {movieDetails.length\n          ? movieDetails.map(({ author, content }) => {\n              return (\n                <li key={nanoid()}>\n                  <h3>{author}</h3>\n                  <p>{content}</p>\n                </li>\n              );\n            })\n          : finishFetch && <p>We don't have any reviews for this movie</p>}\n        {}\n      </ul>\n    </>\n  );\n};\nexport default Reviews;\n","const URL = 'https://api.themoviedb.org/3/';\nconst language = '?language=en-US';\nconst errorText = 'Щось пішло не так :-( спробуйте ще раз!';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OTg2YTIxZDVmYWQ2YjQ4NDQyMjgwNTVhMzRhNzFhNCIsInN1YiI6IjY1Yzc1YjdjOThmMWYxMDE2MmQ2OWEwNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.L_8rlg8ILsxFKeMljqJDpIOjbcsP-UICwiRRB2lFeHY',\n  },\n};\n\nexport const getTrendingMovies = () => {\n  return fetch(`${URL}trending/movie/day${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getMovieFromId = id => {\n  return fetch(`${URL}movie/${id}${language}`, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(errorText);\n    }\n  });\n};\nexport const getCastMovieFromId = id => {\n  return fetch(`${URL}movie/${id}/credits${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getReviewsMovieFromId = id => {\n  return fetch(`${URL}movie/${id}/reviews${language}`, options).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorText);\n      }\n    }\n  );\n};\nexport const getMovieFromQuery = query => {\n  return fetch(\n    `${URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(errorText);\n    }\n  });\n};\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"],"names":["_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","finishFetch","setFinishFetch","movieId","useParams","useEffect","getReviewsMovieFromId","then","_ref","results","catch","error","console","log","message","_jsx","_Fragment","children","length","map","_ref2","author","content","_jsxs","nanoid","URL","language","errorText","options","method","headers","accept","Authorization","getTrendingMovies","fetch","concat","response","ok","json","Error","getMovieFromId","id","getCastMovieFromId","getMovieFromQuery","query","urlAlphabet","size","arguments","undefined","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}